# This file is interpreted as shell script.
# It contains firewall rules issued by CZ.NIC s.z.p.o.
# as a part of Turris project (see https://www.turris.cz/)
# 
# To enable/disable the rules please edit /etc/config/firewall
#
# config include
#   option path /usr/share/firewall/turris
#

DOWNLOAD_DIR="/tmp/fw-rules"
RULES_URL="https://api.turris.cz/firewall-test/turris-rules"
MD5_URL="${RULES_URL}.md5"
TMP_FILE="/tmp/iptables.rules"
PERSISTENT_RULES="/usr/share/firewall/turris-rules"
DOWNLOAD_RULES="${DOWNLOAD_DIR}/turris-rules"
DOWNLOAD_MD5="${DOWNLOAD_RULES}.md5"
WAN=""
while [ -z "${WAN}" ]; do
    . $IPKG_INSTROOT/lib/functions.sh

    # read wan from nikola
    config_load nikola
    config_get WAN main wan_ifname
    [ -n "${WAN}" ] && break

    # read wan from network
    config_load network
    config_get WAN wan ifname
    [ -n "${WAN}" ] && break

    # read wan from ucollect
    set_WAN() {
        local cfg="$1"
        config_get WAN "${cfg}" ifname
    }
    config_load ucollect
    config_foreach set_WAN interface
    [ -n "${WAN}" ] && break

    break
done

# Download FW rules from the server
download_rules() {
    curl -fs --cacert /etc/ssl/startcom.pem --crlfile /etc/ssl/crl.pem "${RULES_URL}" > "${DOWNLOAD_RULES}"
    if [ $? -eq 0 ]; then
        exit 0
    else
        logger -t turris-firewall-rules "Failed to download ${RULES_URL}"
        exit 1
    fi
}

# Download md5 of the rules
download_md5() {
    curl -fs --cacert /etc/ssl/startcom.pem --crlfile /etc/ssl/crl.pem "${MD5_URL}" > "${DOWNLOAD_MD5}";
    if [ $? -eq 0 ]; then
        exit 0
    else
        logger -t turris-firewall-rules "Failed to download ${MD5_URL}"
        exit 1
    fi
}

# Update the persistent file
update_file() {
    if [ -f "${PERSISTENT_RULES}" ]; then
        if [ -f "${TMP_FILE}" ]; then
            cmp -s "${DOWNLOAD_RULES}" "${PERSISTENT_RULES}"
            if [ $? -eq 1 ]; then
                cp "${DOWNLOAD_RULES}" "${PERSISTENT_RULES}"
            fi
        fi
    else
        if [ -f "${DOWNLOAD_RULES}" ]; then
            cp "${DOWNLOAD_RULES}" "${PERSISTENT_RULES}"
        else
            # Fail where there is no file
            exit 1
        fi
    fi
}

if [ -n "${WAN}" ]; then
    CHAIN="turris"

    # Don't store the the rules in turris chain and COMMIT
    iptables-save -t filter | grep -v '^-. turris' | grep -v COMMIT > "${TMP_FILE}"

    # Create directory for the rules
    mkdir -p "${DOWNLOAD_DIR}"

    # Get md5sum instead of downloading the whole file
    if [ -f "${PERSISTENT_RULES}" ]; then
        res=$(download_md5)
        # enter the directory with a persistent file
        cd `dirname "${PERSISTENT_RULES}"`
        if md5sum -s -c "${DOWNLOAD_MD5}"; then
            # Skip when md5 matches with the server md5
            :
        else
            res=$(download_rules)
        fi
    else
        res=$(download_rules)
    fi

    # update file in the persistent memory
    update_file

    while read line
    do
        eval echo "${line}" >> "${TMP_FILE}"
    done < "${PERSISTENT_RULES}"

    # Add the commit
    echo COMMIT >> "${TMP_FILE}"

    iptables-restore -T filter < "${TMP_FILE}"
    if [ $? -eq 1 ]; then
        logger -t turris-firewall-rules "Failed to load downloaded rules"
        exit 1
    fi

    rm "${TMP_FILE}"
fi
